{
  "version": "1.0.1",
  "defaultSpeed": 0.5,
  "_comments": [

  ],
  "_uses": [
    "condition ringsSeen -- get the total number of rings seen by the vision algorithm",

    "actuator shooter -- {'action': 'start'} starts it, {'action': 'stop'} stops it",

    "actuator turret:",
    " {'action': 'rotatePs'} -- rotate to constant 'powershot0', 'powershot1', or 'powershot2' based on ringCount",
    "   -> sends hardware.events.TurretEvent on channel 0",
    " {'action': 'rotate', 'angle': num} -- rotate to specified angle",
    "   -> sends hardware.events.TurretEvent on channel 0",
    " {'action': 'push'} -- push ring in",
    " {'action': 'unpush'} -- reset pusher",

    "condition webcamState -- return the webcam state",

    "actuator webcamDetect -- poke the image detector until it gives us something meaningful",
    " -- retrieve the result of this with ringsSeen",

    "condition incRingCount -- increment the counter of rings shot and return that value"
  ],

  "timers": {
    "spinupDelay": 2,
    "webcamDelay": 1,
    "pushDelay": 0.5
  },

  "constants": {
    "shootFwd": 2200,
    "powershot0": 0.5,
    "powershot1": 0.5,
    "powershot2": 0.5
  },

  "path": [
    {
      "_comment": "[00] Initial move: Start the shooter wheel right away to give it enough time to start",
      "type": "actuator",

      "actuator": {
        "name": "shooter",
        "params": {"action": "start"}
      },

      "_comment2": "-- Check if the webcam is already initialized; skip waiting for it if it is",
      "condition": {
        "name": "webcamState",
        "cond": "==",
        "value": 3,

        "jumpTrue": 2
      }
    },

    {
      "_comment": "[01] Wait until the webcam is running (state=3)",
      "trigger": {
        "class": "org.firstinspires.ftc.teamcode.vision.webcam.WebcamEvent",
        "channel": 3
      },

      "type": "nop"
    },

    {
      "_comment": "[02] Give the webcam a second or so to warm up, then run the vision algorithm",
      "trigger": {
        "class": "org.firstinspires.ftc.teamcode.util.event.TimerEvent",
        "timer": "webcamDelay"
      },

      "type": "actuator",
      "actuator": {
        "name": "webcamDetect",
        "params": {}
      }
    },

    {
      "_comment": "[03] While the shooter is starting, move forward to the shoot position",
      "type": "forward",
      "dist": "shootFwd"
    },

    {
      "_comment": "[04] Move the turret to the correct position",
      "type": "actuator",

      "actuator": {
        "name": "turret",
        "params": {"action": "rotatePs"}
      }
    },

    {
      "_comment": "[05] Wait for the turret to reach its target",

      "trigger": {
        "class": "org.firstinspires.ftc.teamcode.hardware.events.TurretEvent",
        "channel": 0
      },

      "type": "nop"
    },

    {
      "_comment": "[06] Delay for some time for the shooter to spin up, then run the pusher",

      "trigger": {
        "class": "org.firstinspires.ftc.teamcode.util.event.TimerEvent",
        "timer": "spinupDelay"
      },

      "type": "nop"
    },

    {
      "_comment": "[07] Actually push the ring in (as a separate move so we can jump here)",

      "type": "actuator",
      "actuator": {
        "name": "turret",
        "params": {"action":  "push"}
      }
    },

    {
      "_comment": "[08] After allowing the pusher to move, reset it",

      "trigger": {
        "class": "org.firstinspires.ftc.teamcode.util.event.TimerEvent",
        "timer": "pushDelay"
      },

      "type": "actuator",
      "actuator": {
        "name": "turret",
        "params": {"action":  "unpush"}
      }
    },

    {
      "_comment": "[09] Once the pusher is back, decide what to do next",

      "trigger": {
        "class": "org.firstinspires.ftc.teamcode.util.event.TimerEvent",
        "timer": "pushDelay"
      },

      "type": "nop",

      "condition": {
        "name": "incRingCount",
        "cond": "==",
        "value": 3
      }
    },

    {
      "_comment": "[10] "
    }
  ]
}